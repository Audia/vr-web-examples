html, body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  background: #000;
  overflow: hidden;
}


/* this is just to move the scene to the visible area when not in fullscreen VR */
#container:not(:-moz-full-screen) {
  transform: translate(50%, 50%);
  height: 100%;
  perspective: 1800px;
}

/*
threed-class elements have transform-style: preserve-3d.  Any element with this property applied
will be projected into stereo VR.   preserve-3d is not inherited.

position: absolute; and 0,0 is also set because we'll position these elements fully using 3D
transforms.  Their CSS position is irrelevant for us.  Without this, their CSS position will come
into play as well as their transform.

When in fullscreen VR, the 0,0,0 position is at the center of the viewport and not the top left.

We don't modify the original transform-origin here (50% 50% 0), because that can be useful
for moving elements around by their center point.  But it could also be set to 0,0,0 to make it
completely clear exactly where/how 3D objects are moving.
*/

.threed {
  transform-style: preserve-3d;
  position: absolute;
  top: 0;
  left: 0;
}

/*
The camera div just serves as a way to set up a modelview transform for the entire rest of the
scene.  The transform that's set on it needs to be the *inverse* of where you want the camera
to be; that is, if you want the camera to be at (0, 0, 500), then the transform needs to be
set to (0, 0, -500).  The transform-origin is set here because we want to go from the origin
*/

#camera {
  /* the transform itself is set programatically, since it needs to take into account the HMD orientation */
  transform-origin: 0 0 0;
}


/*
Skybox example.
*/

#sky {
  width: 800px;
  height: 800px;
  transform: translate(-50%, -50%);
}

.skybox-side {
  width: 808px;
  height: 808px;
  background-size: 100% 100%;
  text-align: center;
}

.skybox-front {
  transform: translate3d(0, 0, -396px);
}

.skybox-left {
  transform: translate3d(-396px, 0, 0) rotateY(90deg);
}

.skybox-right {
  transform: translate3d(396px, 0, 0) rotateY(-90deg);
}

.skybox-back {
  transform: translate3d(0, 0, 396px) rotateY(180deg);
}

.skybox-bottom {
  transform: translate3d(0, 396px, 0) rotateX(90deg);
}

.skybox-top {
  transform: translate3d(0, -404px, 0) rotateX(-90deg);
}

